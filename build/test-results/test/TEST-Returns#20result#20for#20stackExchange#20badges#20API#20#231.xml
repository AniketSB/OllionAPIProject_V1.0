<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Returns result for stackExchange badges API #1" tests="5" skipped="0" failures="0" errors="0" timestamp="2024-02-07T09:15:07" hostname="ANIKETs-MacBook-Pro.local" time="17.607">
  <properties/>
  <testcase name="Get the badges identified by ids. #1" classname="Returns result for stackExchange badges API #1" time="9.961"/>
  <testcase name="Get the badges identified by ids. #2" classname="Returns result for stackExchange badges API #1" time="1.786"/>
  <testcase name="Get the badges identified by ids. #3" classname="Returns result for stackExchange badges API #1" time="2.161"/>
  <testcase name="To verify get badges endpoint returns error response for incorrect badge id" classname="Returns result for stackExchange badges API #1" time="1.659"/>
  <testcase name="To verify get badges endpoint returns correct error message for incorrect badge id" classname="Returns result for stackExchange badges API #1" time="2.04"/>
  <system-out><![CDATA[
@BadgesAPI @HappyPath
Scenario Outline: Get the badges identified by ids.             # src/test/resources/cucumber.features/GetBadgesIds.feature:10
07-02-2024 14:45:17.470 ?[35m[Test worker]?[0;39m ?[34mINFO ?[0;39m c.e.s.filter.RestAssuredLogFilter.logRequest - ## Request details: [b5a0a522-a7e0-4553-a4f5-c4430f54d20c] ##
Request method:	GET
Request path:	https://api.stackexchange.com/2.3/badges/?order=desc&sort=rank&site=stackoverflow
Request params:	<none>
Query params:	order=desc
				sort=rank
				site=stackoverflow
Path params:	<none>
Headers:		Accept=*/*
Body:			<none>
07-02-2024 14:45:17.541 ?[35m[Test worker]?[0;39m ?[34mINFO ?[0;39m c.e.s.filter.RestAssuredLogFilter.logResponse - ## Response details: [b5a0a522-a7e0-4553-a4f5-c4430f54d20c] ##
HTTP/1.1 200 OK
cache-control: private
content-length: 717
content-type: application/json; charset=utf-8
content-encoding: gzip
strict-transport-security: max-age=15552000
access-control-allow-origin: *
access-control-allow-methods: GET, POST
access-control-allow-credentials: false
x-content-type-options: nosniff
x-request-guid: 8442ab7f-a700-447c-858b-cbc31b492c4f
set-cookie: prov=eafaf89f-ff19-45d2-a1c5-5100f416b3fd; expires=Fri, 07 Feb 2025 09:15:17 GMT; domain=.stackexchange.com; path=/; secure; samesite=none; httponly
content-security-policy: upgrade-insecure-requests; frame-ancestors 'self' https://stackexchange.com
date: Wed, 07 Feb 2024 09:15:17 GMT
prov=eafaf89f-ff19-45d2-a1c5-5100f416b3fd;Path=/;Domain=.stackexchange.com;Secure;HttpOnly;Expires=07/02/2025, 09:15{
    "items": [
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 6440,
            "link": "https://stackoverflow.com/badges/6440/n-gram",
            "name": "n-gram"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 9296,
            "link": "https://stackoverflow.com/badges/9296/ngroute",
            "name": "ngroute"
        },
        {
            "badge_type": "tag_based",
            "award_count": 8,
            "rank": "bronze",
            "badge_id": 6944,
            "link": "https://stackoverflow.com/badges/6944/ngrx",
            "name": "ngrx"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 9542,
            "link": "https://stackoverflow.com/badges/9542/ngrx-effects",
            "name": "ngrx-effects"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 9787,
            "link": "https://stackoverflow.com/badges/9787/ngrx-store",
            "name": "ngrx-store"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 8454,
            "link": "https://stackoverflow.com/badges/8454/ngx-bootstrap",
            "name": "ngx-bootstrap"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 11752,
            "link": "https://stackoverflow.com/badges/11752/ngxs",
            "name": "ngxs"
        },
        {
            "badge_type": "tag_based",
            "award_count": 70,
            "rank": "bronze",
            "badge_id": 332,
            "link": "https://stackoverflow.com/badges/332/nhibernate",
            "name": "nhibernate"
        },
        {
            "badge_type": "tag_based",
            "award_count": 7,
            "rank": "bronze",
            "badge_id": 1094,
            "link": "https://stackoverflow.com/badges/1094/nhibernate-mapping",
            "name": "nhibernate-mapping"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 9207,
            "link": "https://stackoverflow.com/badges/9207/nightwatch-js",
            "name": "nightwatch.js"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 2710,
            "link": "https://stackoverflow.com/badges/2710/nimbus",
            "name": "nimbus"
        },
        {
            "badge_type": "tag_based",
            "award_count": 7,
            "rank": "bronze",
            "badge_id": 9001,
            "link": "https://stackoverflow.com/badges/9001/nim-lang",
            "name": "nim-lang"
        },
        {
            "badge_type": "tag_based",
            "award_count": 12,
            "rank": "bronze",
            "badge_id": 994,
            "link": "https://stackoverflow.com/badges/994/ninject",
            "name": "ninject"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 1465,
            "link": "https://stackoverflow.com/badges/1465/ninject-2",
            "name": "ninject-2"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 2991,
            "link": "https://stackoverflow.com/badges/2991/ninject-extensions",
            "name": "ninject-extensions"
        },
        {
            "badge_type": "tag_based",
            "award_count": 6,
            "rank": "bronze",
            "badge_id": 1807,
            "link": "https://stackoverflow.com/badges/1807/nio",
            "name": "nio"
        },
        {
            "badge_type": "tag_based",
            "award_count": 2,
            "rank": "bronze",
            "badge_id": 9212,
            "link": "https://stackoverflow.com/badges/9212/nix",
            "name": "nix"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 9693,
            "link": "https://stackoverflow.com/badges/9693/nixos",
            "name": "nixos"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 7576,
            "link": "https://stackoverflow.com/badges/7576/nlme",
            "name": "nlme"
        },
        {
            "badge_type": "tag_based",
            "award_count": 4,
            "rank": "bronze",
            "badge_id": 1389,
            "link": "https://stackoverflow.com/badges/1389/nlog",
            "name": "nlog"
        },
        {
            "badge_type": "tag_based",
            "award_count": 38,
            "rank": "bronze",
            "badge_id": 797,
            "link": "https://stackoverflow.com/badges/797/nlp",
            "name": "nlp"
        },
        {
            "badge_type": "tag_based",
            "award_count": 2,
            "rank": "bronze",
            "badge_id": 8565,
            "link": "https://stackoverflow.com/badges/8565/nls",
            "name": "nls"
        },
        {
            "badge_type": "tag_based",
            "award_count": 8,
            "rank": "bronze",
            "badge_id": 2667,
            "link": "https://stackoverflow.com/badges/2667/nltk",
            "name": "nltk"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 6459,
            "link": "https://stackoverflow.com/badges/6459/nmap",
            "name": "nmap"
        },
        {
            "badge_type": "tag_based",
            "award_count": 2,
            "rank": "bronze",
            "badge_id": 3989,
            "link": "https://stackoverflow.com/badges/3989/nodatime",
            "name": "nodatime"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1276,
            "rank": "bronze",
            "badge_id": 899,
            "link": "https://stackoverflow.com/badges/899/node-js",
            "name": "node.js"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 6505,
            "link": "https://stackoverflow.com/badges/6505/nodemcu",
            "name": "nodemcu"
        },
        {
            "badge_type": "tag_based",
            "award_count": 2,
            "rank": "bronze",
            "badge_id": 7955,
            "link": "https://stackoverflow.com/badges/7955/node-modules",
            "name": "node-modules"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 6978,
            "link": "https://stackoverflow.com/badges/6978/node-mongodb-native",
            "name": "node-mongodb-native"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 10894,
            "link": "https://stackoverflow.com/badges/10894/node-oracledb",
            "name": "node-oracledb"
        }
    ],
    "has_more": true,
    "quota_max": 300,
    "quota_remaining": 279
}

  Given user call the get endpoint to get badges "ALL" for 'id' # com.example.stackExchange.stepdefs.GeneralSteps.usercallthegetendpointtotogetbadges(java.lang.String,java.lang.String)
  Then user receive a 200 HTTP response                         # com.example.stackExchange.stepdefs.GeneralSteps.userreceivehttpresponse(java.lang.Integer)

@BadgesAPI @HappyPath
Scenario Outline: Get the badges identified by ids.             # src/test/resources/cucumber.features/GetBadgesIds.feature:11
07-02-2024 14:45:19.427 ?[35m[Test worker]?[0;39m ?[34mINFO ?[0;39m c.e.s.filter.RestAssuredLogFilter.logRequest - ## Request details: [ea24bd45-21d7-45f3-a4a6-e25292c383d9] ##
Request method:	GET
Request path:	https://api.stackexchange.com/2.3/badges/262?order=desc&sort=rank&site=stackoverflow
Request params:	<none>
Query params:	order=desc
				sort=rank
				site=stackoverflow
Path params:	<none>
Headers:		Accept=*/*
Body:			<none>
07-02-2024 14:45:19.436 ?[35m[Test worker]?[0;39m ?[34mINFO ?[0;39m c.e.s.filter.RestAssuredLogFilter.logResponse - ## Response details: [ea24bd45-21d7-45f3-a4a6-e25292c383d9] ##
HTTP/1.1 200 OK
cache-control: private
content-length: 184
content-type: application/json; charset=utf-8
content-encoding: gzip
strict-transport-security: max-age=15552000
access-control-allow-origin: *
access-control-allow-methods: GET, POST
access-control-allow-credentials: false
x-content-type-options: nosniff
x-request-guid: 2724f43d-5652-47e1-a6f8-8045140f05d5
set-cookie: prov=f4f28db2-39b8-4c0e-a7eb-7b471c3deb98; expires=Fri, 07 Feb 2025 09:15:19 GMT; domain=.stackexchange.com; path=/; secure; samesite=none; httponly
content-security-policy: upgrade-insecure-requests; frame-ancestors 'self' https://stackexchange.com
date: Wed, 07 Feb 2024 09:15:19 GMT
prov=f4f28db2-39b8-4c0e-a7eb-7b471c3deb98;Path=/;Domain=.stackexchange.com;Secure;HttpOnly;Expires=07/02/2025, 09:15{
    "items": [
        {
            "badge_type": "named",
            "award_count": 12974,
            "rank": "gold",
            "badge_id": 262,
            "link": "https://stackoverflow.com/badges/262/publicist",
            "name": "Publicist"
        }
    ],
    "has_more": false,
    "quota_max": 300,
    "quota_remaining": 278
}

  Given user call the get endpoint to get badges "262" for 'id' # com.example.stackExchange.stepdefs.GeneralSteps.usercallthegetendpointtotogetbadges(java.lang.String,java.lang.String)
  Then user receive a 200 HTTP response                         # com.example.stackExchange.stepdefs.GeneralSteps.userreceivehttpresponse(java.lang.Integer)

@BadgesAPI @HappyPath
Scenario Outline: Get the badges identified by ids.          # src/test/resources/cucumber.features/GetBadgesIds.feature:12
07-02-2024 14:45:21.584 ?[35m[Test worker]?[0;39m ?[34mINFO ?[0;39m c.e.s.filter.RestAssuredLogFilter.logRequest - ## Request details: [c53092ed-a9a9-4054-9273-6433100643f5] ##
Request method:	GET
Request path:	https://api.stackexchange.com/2.3/badges/?order=desc&sort=rank&site=stackoverflow
Request params:	<none>
Query params:	order=desc
				sort=rank
				site=stackoverflow
Path params:	<none>
Headers:		Accept=*/*
Body:			<none>
07-02-2024 14:45:21.593 ?[35m[Test worker]?[0;39m ?[34mINFO ?[0;39m c.e.s.filter.RestAssuredLogFilter.logResponse - ## Response details: [c53092ed-a9a9-4054-9273-6433100643f5] ##
HTTP/1.1 200 OK
cache-control: private
content-length: 717
content-type: application/json; charset=utf-8
content-encoding: gzip
strict-transport-security: max-age=15552000
access-control-allow-origin: *
access-control-allow-methods: GET, POST
access-control-allow-credentials: false
x-content-type-options: nosniff
x-request-guid: d2837e13-d896-49fd-ba50-9d8ed7e7d584
set-cookie: prov=d06fdde9-2c4b-4546-bafd-47bb84bb3225; expires=Fri, 07 Feb 2025 09:15:21 GMT; domain=.stackexchange.com; path=/; secure; samesite=none; httponly
content-security-policy: upgrade-insecure-requests; frame-ancestors 'self' https://stackexchange.com
date: Wed, 07 Feb 2024 09:15:21 GMT
prov=d06fdde9-2c4b-4546-bafd-47bb84bb3225;Path=/;Domain=.stackexchange.com;Secure;HttpOnly;Expires=07/02/2025, 09:15{
    "items": [
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 6440,
            "link": "https://stackoverflow.com/badges/6440/n-gram",
            "name": "n-gram"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 9296,
            "link": "https://stackoverflow.com/badges/9296/ngroute",
            "name": "ngroute"
        },
        {
            "badge_type": "tag_based",
            "award_count": 8,
            "rank": "bronze",
            "badge_id": 6944,
            "link": "https://stackoverflow.com/badges/6944/ngrx",
            "name": "ngrx"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 9542,
            "link": "https://stackoverflow.com/badges/9542/ngrx-effects",
            "name": "ngrx-effects"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 9787,
            "link": "https://stackoverflow.com/badges/9787/ngrx-store",
            "name": "ngrx-store"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 8454,
            "link": "https://stackoverflow.com/badges/8454/ngx-bootstrap",
            "name": "ngx-bootstrap"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 11752,
            "link": "https://stackoverflow.com/badges/11752/ngxs",
            "name": "ngxs"
        },
        {
            "badge_type": "tag_based",
            "award_count": 70,
            "rank": "bronze",
            "badge_id": 332,
            "link": "https://stackoverflow.com/badges/332/nhibernate",
            "name": "nhibernate"
        },
        {
            "badge_type": "tag_based",
            "award_count": 7,
            "rank": "bronze",
            "badge_id": 1094,
            "link": "https://stackoverflow.com/badges/1094/nhibernate-mapping",
            "name": "nhibernate-mapping"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 9207,
            "link": "https://stackoverflow.com/badges/9207/nightwatch-js",
            "name": "nightwatch.js"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 2710,
            "link": "https://stackoverflow.com/badges/2710/nimbus",
            "name": "nimbus"
        },
        {
            "badge_type": "tag_based",
            "award_count": 7,
            "rank": "bronze",
            "badge_id": 9001,
            "link": "https://stackoverflow.com/badges/9001/nim-lang",
            "name": "nim-lang"
        },
        {
            "badge_type": "tag_based",
            "award_count": 12,
            "rank": "bronze",
            "badge_id": 994,
            "link": "https://stackoverflow.com/badges/994/ninject",
            "name": "ninject"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 1465,
            "link": "https://stackoverflow.com/badges/1465/ninject-2",
            "name": "ninject-2"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 2991,
            "link": "https://stackoverflow.com/badges/2991/ninject-extensions",
            "name": "ninject-extensions"
        },
        {
            "badge_type": "tag_based",
            "award_count": 6,
            "rank": "bronze",
            "badge_id": 1807,
            "link": "https://stackoverflow.com/badges/1807/nio",
            "name": "nio"
        },
        {
            "badge_type": "tag_based",
            "award_count": 2,
            "rank": "bronze",
            "badge_id": 9212,
            "link": "https://stackoverflow.com/badges/9212/nix",
            "name": "nix"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 9693,
            "link": "https://stackoverflow.com/badges/9693/nixos",
            "name": "nixos"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 7576,
            "link": "https://stackoverflow.com/badges/7576/nlme",
            "name": "nlme"
        },
        {
            "badge_type": "tag_based",
            "award_count": 4,
            "rank": "bronze",
            "badge_id": 1389,
            "link": "https://stackoverflow.com/badges/1389/nlog",
            "name": "nlog"
        },
        {
            "badge_type": "tag_based",
            "award_count": 38,
            "rank": "bronze",
            "badge_id": 797,
            "link": "https://stackoverflow.com/badges/797/nlp",
            "name": "nlp"
        },
        {
            "badge_type": "tag_based",
            "award_count": 2,
            "rank": "bronze",
            "badge_id": 8565,
            "link": "https://stackoverflow.com/badges/8565/nls",
            "name": "nls"
        },
        {
            "badge_type": "tag_based",
            "award_count": 8,
            "rank": "bronze",
            "badge_id": 2667,
            "link": "https://stackoverflow.com/badges/2667/nltk",
            "name": "nltk"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 6459,
            "link": "https://stackoverflow.com/badges/6459/nmap",
            "name": "nmap"
        },
        {
            "badge_type": "tag_based",
            "award_count": 2,
            "rank": "bronze",
            "badge_id": 3989,
            "link": "https://stackoverflow.com/badges/3989/nodatime",
            "name": "nodatime"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1276,
            "rank": "bronze",
            "badge_id": 899,
            "link": "https://stackoverflow.com/badges/899/node-js",
            "name": "node.js"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 6505,
            "link": "https://stackoverflow.com/badges/6505/nodemcu",
            "name": "nodemcu"
        },
        {
            "badge_type": "tag_based",
            "award_count": 2,
            "rank": "bronze",
            "badge_id": 7955,
            "link": "https://stackoverflow.com/badges/7955/node-modules",
            "name": "node-modules"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 6978,
            "link": "https://stackoverflow.com/badges/6978/node-mongodb-native",
            "name": "node-mongodb-native"
        },
        {
            "badge_type": "tag_based",
            "award_count": 1,
            "rank": "bronze",
            "badge_id": 10894,
            "link": "https://stackoverflow.com/badges/10894/node-oracledb",
            "name": "node-oracledb"
        }
    ],
    "has_more": true,
    "quota_max": 300,
    "quota_remaining": 277
}

  Given user call the get endpoint to get badges "" for 'id' # com.example.stackExchange.stepdefs.GeneralSteps.usercallthegetendpointtotogetbadges(java.lang.String,java.lang.String)
  Then user receive a 200 HTTP response                      # com.example.stackExchange.stepdefs.GeneralSteps.userreceivehttpresponse(java.lang.Integer)

@BadgesAPI @UnhappyPath
Scenario Outline: To verify get badges endpoint returns error response for incorrect badge id # src/test/resources/cucumber.features/GetBadgesIds.feature:20
07-02-2024 14:45:23.257 ?[35m[Test worker]?[0;39m ?[34mINFO ?[0;39m c.e.s.filter.RestAssuredLogFilter.logRequest - ## Request details: [484b6965-8419-4bc9-8157-22c9dd8b4fad] ##
Request method:	GET
Request path:	https://api.stackexchange.com/2.3/badges/605tw?order=desc&sort=rank&site=stackoverflow
Request params:	<none>
Query params:	order=desc
				sort=rank
				site=stackoverflow
Path params:	<none>
Headers:		Accept=*/*
Body:			<none>
07-02-2024 14:45:23.259 ?[35m[Test worker]?[0;39m ?[34mINFO ?[0;39m c.e.s.filter.RestAssuredLogFilter.logResponse - ## Response details: [484b6965-8419-4bc9-8157-22c9dd8b4fad] ##
HTTP/1.1 400 Bad Request
cache-control: private
content-length: 97
content-type: application/json; charset=utf-8
content-encoding: gzip
strict-transport-security: max-age=15552000
x-error-status: 404
x-error-name: no_method
x-error-message: no method found with this name
access-control-allow-origin: *
access-control-allow-methods: GET, POST
access-control-allow-credentials: false
x-content-type-options: nosniff
x-request-guid: f33a4b91-fd74-4867-9e8d-808b8665d7d0
set-cookie: prov=f49451f9-38e5-4885-95f6-8ee3614b354c; expires=Fri, 07 Feb 2025 09:15:23 GMT; domain=.stackexchange.com; path=/; secure; samesite=none; httponly
content-security-policy: upgrade-insecure-requests; frame-ancestors 'self' https://stackexchange.com
date: Wed, 07 Feb 2024 09:15:23 GMT
prov=f49451f9-38e5-4885-95f6-8ee3614b354c;Path=/;Domain=.stackexchange.com;Secure;HttpOnly;Expires=07/02/2025, 09:15{
    "error_id": 404,
    "error_message": "no method found with this name",
    "error_name": "no_method"
}

  Given user call the get endpoint to get badges "605tw" for 'id'                             # com.example.stackExchange.stepdefs.GeneralSteps.usercallthegetendpointtotogetbadges(java.lang.String,java.lang.String)
  Then user receive a 400 HTTP response                                                       # com.example.stackExchange.stepdefs.GeneralSteps.userreceivehttpresponse(java.lang.Integer)

@BadgesAPI @UnhappyPath
Scenario Outline: To verify get badges endpoint returns correct error message for incorrect badge id # src/test/resources/cucumber.features/GetBadgesIds.feature:31
07-02-2024 14:45:24.904 ?[35m[Test worker]?[0;39m ?[34mINFO ?[0;39m c.e.s.filter.RestAssuredLogFilter.logRequest - ## Request details: [150aec8a-6173-4faf-9ae1-f5bd726cbd1c] ##
Request method:	GET
Request path:	https://api.stackexchange.com/2.3/badges/635tw?order=desc&sort=rank&site=stackoverflow
Request params:	<none>
Query params:	order=desc
				sort=rank
				site=stackoverflow
Path params:	<none>
Headers:		Accept=*/*
Body:			<none>
07-02-2024 14:45:24.906 ?[35m[Test worker]?[0;39m ?[34mINFO ?[0;39m c.e.s.filter.RestAssuredLogFilter.logResponse - ## Response details: [150aec8a-6173-4faf-9ae1-f5bd726cbd1c] ##
HTTP/1.1 400 Bad Request
cache-control: private
content-length: 97
content-type: application/json; charset=utf-8
content-encoding: gzip
strict-transport-security: max-age=15552000
x-error-status: 404
x-error-name: no_method
x-error-message: no method found with this name
access-control-allow-origin: *
access-control-allow-methods: GET, POST
access-control-allow-credentials: false
x-content-type-options: nosniff
x-request-guid: 2998c111-4530-41c9-aa38-8a388a8c0c2c
set-cookie: prov=622206fa-86c3-45dc-8717-d9ceaedb99ce; expires=Fri, 07 Feb 2025 09:15:24 GMT; domain=.stackexchange.com; path=/; secure; samesite=none; httponly
content-security-policy: upgrade-insecure-requests; frame-ancestors 'self' https://stackexchange.com
date: Wed, 07 Feb 2024 09:15:24 GMT
prov=622206fa-86c3-45dc-8717-d9ceaedb99ce;Path=/;Domain=.stackexchange.com;Secure;HttpOnly;Expires=07/02/2025, 09:15{
    "error_id": 404,
    "error_message": "no method found with this name",
    "error_name": "no_method"
}

  Given user call the get endpoint to get badges "635tw" for 'id'                                    # com.example.stackExchange.stepdefs.GeneralSteps.usercallthegetendpointtotogetbadges(java.lang.String,java.lang.String)
  Then user receive a 400 HTTP response                                                              # com.example.stackExchange.stepdefs.GeneralSteps.userreceivehttpresponse(java.lang.Integer)
  And verify response parameters are available                                                       # com.example.stackExchange.stepdefs.GeneralSteps.verifyresponseparametersavailable(java.util.List<java.util.List<java.lang.String>>)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
